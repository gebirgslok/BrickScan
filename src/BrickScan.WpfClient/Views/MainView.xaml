<!--
    Copyright (c) 2020 Jens Eisenbach
    
    Permission is hereby granted, free of charge, to any person
    obtaining a copy of this software and associated documentation
    files (the "Software"), to deal in the Software without
    restriction, including without limitation the rights to use,
    copy, modify, merge, publish, distribute, sublicense, and/or sell
    copies of the Software, and to permit persons to whom the
    Software is furnished to do so, subject to the following
    conditions:
    
    The above copyright notice and this permission notice shall be
    included in all copies or substantial portions of the Software.
    
    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
    EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
    OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
    NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
    HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
    WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
    FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
    OTHER DEALINGS IN THE SOFTWARE.
-->

<mah:MetroWindow
    x:Class="BrickScan.WpfClient.Views.MainView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converter="clr-namespace:BrickScan.WpfClient.Converter"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
    xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:resx="clr-namespace:BrickScan.WpfClient.Properties"
    xmlns:s="https://github.com/canton7/Stylet"
    Title="{x:Static resx:Resources.BrickScan}"
    Width="1200"
    Height="800"
    mah:DialogParticipation.Register="{Binding Path=.}"
    Icon="pack://application:,,,/BrickScan.WpfClient;component/icon.png"
    Loaded="{s:Action OnLoaded}"
    ShowIconOnTitleBar="False"
    mc:Ignorable="d">
    <mah:MetroWindow.Resources>
        <s:BoolToVisibilityConverter
            x:Key="BoolToVisibilityConverter"
            FalseVisibility="Collapsed"
            TrueVisibility="Visible" />
        <s:BoolToVisibilityConverter
            x:Key="InvBoolToVisibilityConverter"
            FalseVisibility="Visible"
            TrueVisibility="Collapsed" />
    </mah:MetroWindow.Resources>
    <mah:MetroWindow.LeftWindowCommands>
        <mah:WindowCommands>
            <Button Command="{s:Action CloseApplication}" Content="{x:Static resx:Resources.Close}" />
            <Button Command="{s:Action LaunchBrickScanHomepage}" ToolTip="{x:Static resx:Resources.BrickScanHomepage}">
                <Image
                    Width="22"
                    Height="22"
                    Source="pack://application:,,,/BrickScan.WpfClient;component/icon.png" />
            </Button>
            <Button Command="{s:Action LaunchBrickScanOnGithub}" ToolTip="{x:Static resx:Resources.BrickScanOnGithub}">
                <iconPacks:Material
                    Width="22"
                    Height="22"
                    Kind="Github" />
            </Button>
        </mah:WindowCommands>
    </mah:MetroWindow.LeftWindowCommands>
    <mah:MetroWindow.RightWindowCommands>
        <mah:WindowCommands>
            <TextBlock
                Margin="5,0,5,0"
                VerticalAlignment="Center"
                Opacity=".5"
                Text="{x:Static resx:Resources.NotLoggedOn}"
                Visibility="{Binding Path=UserSession.IsUserLoggedOn, Converter={StaticResource InvBoolToVisibilityConverter}, Mode=OneWay}" />
            <Button
                Margin="5,0,5,0"
                VerticalAlignment="Center"
                Command="{s:Action EditProfileAsync}"
                Content="{Binding UserSession.Username, Mode=OneWay}"
                Visibility="{Binding Path=UserSession.IsUserLoggedOn, Converter={StaticResource BoolToVisibilityConverter}, Mode=OneWay}" />
            <Button
                Command="{s:Action LogOnAsync}"
                ToolTip="{x:Static resx:Resources.LogOn}"
                Visibility="{Binding Path=UserSession.IsUserLoggedOn, Converter={StaticResource InvBoolToVisibilityConverter}, Mode=OneWay}">
                <iconPacks:Material
                    Width="22"
                    Height="22"
                    Kind="Login" />
            </Button>
            <Button
                Command="{s:Action LogOffAsync}"
                ToolTip="{x:Static resx:Resources.LogOff}"
                Visibility="{Binding Path=UserSession.IsUserLoggedOn, Converter={StaticResource BoolToVisibilityConverter}, Mode=OneWay}">
                <iconPacks:Material
                    Width="22"
                    Height="22"
                    Kind="Logout" />
            </Button>
        </mah:WindowCommands>
    </mah:MetroWindow.RightWindowCommands>
    <Grid>
        <Grid.Resources>
            <converter:SelectedItemToContentConverter x:Key="SelectedItemToContentConverter" />
            <DataTemplate x:Key="MenuItemTemplate" DataType="{x:Type mah:HamburgerMenuIconItem}">
                <Grid
                    x:Name="RootGrid"
                    Height="48"
                    Background="Transparent">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="48" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <ContentControl
                        Grid.Column="0"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Content="{Binding Icon, Mode=OneTime}"
                        Focusable="False"
                        Foreground="{DynamicResource MahApps.Brushes.Text}" />
                    <TextBlock
                        Grid.Column="1"
                        VerticalAlignment="Center"
                        FontSize="16"
                        Foreground="{DynamicResource MahApps.Brushes.Text}"
                        Text="{Binding Label, Mode=OneTime}" />
                </Grid>
            </DataTemplate>
            <Style BasedOn="{StaticResource {x:Type mah:HamburgerMenu}}" TargetType="{x:Type mah:HamburgerMenu}">
                <Setter Property="HamburgerButtonTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <mah:FontIcon Glyph="&#xE700;" />
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsPaneOpen" Value="True">
                        <Setter Property="HamburgerButtonTemplate">
                            <Setter.Value>
                                <DataTemplate>
                                    <mah:FontIcon Glyph="&#xE711;" />
                                </DataTemplate>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                </Style.Triggers>
            </Style>
        </Grid.Resources>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <mah:HamburgerMenu
            CanResizeOpenPane="True"
            Foreground="White"
            IsPaneOpen="true"
            ItemTemplate="{StaticResource MenuItemTemplate}"
            ItemsSource="{Binding MenuItems, Mode=OneTime}"
            OpenPaneLength="200"
            OptionsItemTemplate="{StaticResource MenuItemTemplate}"
            OptionsItemsSource="{Binding MenuOptionItems, Mode=OneTime}"
            PaneBackground="{DynamicResource MahApps.Brushes.Gray8}"
            PaneForeground="{DynamicResource MahApps.Brushes.Text}"
            SelectedItem="{Binding Path=SelectedItem, Mode=TwoWay}">
            <mah:HamburgerMenu.Content>
                <MultiBinding Converter="{StaticResource SelectedItemToContentConverter}">
                    <Binding
                        Mode="OneWay"
                        Path="SelectedItem"
                        RelativeSource="{RelativeSource Self}" />
                    <Binding
                        Mode="OneWay"
                        Path="SelectedOptionsItem"
                        RelativeSource="{RelativeSource Self}" />
                </MultiBinding>
            </mah:HamburgerMenu.Content>
            <mah:HamburgerMenu.ContentTemplate>
                <DataTemplate DataType="{x:Type mah:HamburgerMenuItem}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="48" />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <Border Grid.Row="0" Background="{DynamicResource MahApps.Brushes.Gray8}">
                            <TextBlock
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                FontSize="24"
                                Foreground="{DynamicResource MahApps.Brushes.Text}"
                                Text="{Binding Label, Mode=OneTime}" />
                        </Border>
                        <ContentControl
                            Grid.Row="1"
                            s:View.Model="{Binding Tag, Mode=OneTime}"
                            Focusable="False" />
                    </Grid>
                </DataTemplate>
            </mah:HamburgerMenu.ContentTemplate>
        </mah:HamburgerMenu>
        <ContentControl Grid.Row="1" s:View.Model="{Binding StatusBarViewModel, Mode=OneTime}" />
    </Grid>
</mah:MetroWindow>
